# SAE Client Configuration Template
# Copy this file to .env and modify values as needed

# =============================================================================
# SAE Identity Configuration
# =============================================================================

# SAE identifier - unique identifier for this SAE in the QKD network
# Format: String (e.g., SAE_001, SAE_CLIENT_001)
SAE_SAE_ID=SAE_001

# SAE mode - legacy single-mode operation (master or slave)
# Note: Use SAE_SAE_ROLES for multi-role support
# Values: master, slave
SAE_SAE_MODE=master

# SAE roles - list of roles this SAE can perform
# Supports multi-role scenarios (e.g., master to SAE_B, slave to SAE_C)
# Values: List of "master" and/or "slave" (e.g., ["master"], ["slave"], ["master", "slave"])
SAE_SAE_ROLES=["master"]

# =============================================================================
# KME Server Configuration
# =============================================================================

# KME server hostname or IP address
# The KME server this SAE connects to for key requests
SAE_KME_HOST=192.168.201.220

# KME server port
# HTTPS port for KME server communication
SAE_KME_PORT=8443

# KME server base URL
# Full base URL for KME server (auto-generated from host and port)
SAE_KME_BASE_URL=https://192.168.201.220:8443

# =============================================================================
# Certificate Configuration
# =============================================================================

# SAE certificate path
# Path to the SAE's X.509 certificate for mTLS authentication
SAE_SAE_CERT_PATH=./certs/sae/sae1.crt

# SAE private key path
# Path to the SAE's private key for mTLS authentication
SAE_SAE_KEY_PATH=./certs/sae/sae1.key

# CA certificate path
# Path to the Certificate Authority certificate for server verification
SAE_CA_CERT_PATH=./certs/ca/ca.crt

# =============================================================================
# Local Storage Configuration
# =============================================================================

# Data directory
# Directory for storing local data files
SAE_DATA_DIR=./data

# Logs directory
# Directory for storing log files
SAE_LOGS_DIR=./logs

# Keys storage file
# SQLite database file for storing keys locally
SAE_KEYS_FILE=./data/keys.json

# =============================================================================
# Logging Configuration
# =============================================================================

# Log level
# Logging verbosity level
# Values: DEBUG, INFO, WARNING, ERROR, CRITICAL
SAE_LOG_LEVEL=INFO

# Log file path
# Path to the main log file
SAE_LOG_FILE=./logs/sae_client.log

# =============================================================================
# Network Settings
# =============================================================================

# Request timeout in seconds
# Timeout for HTTP requests to KME server
SAE_TIMEOUT=30

# Maximum retry attempts
# Number of retries for failed requests
SAE_MAX_RETRIES=3

# SSL verification
# Whether to verify SSL certificates
# Values: true, false
SAE_VERIFY_SSL=true

# =============================================================================
# Debug Settings
# =============================================================================

# Debug mode
# Enable comprehensive debug logging
# Shows: Full key IDs, key material, MD5 hashes, KME request/response data
# Values: true, false
SAE_DEBUG_MODE=false

# =============================================================================
# Master/Slave Communication Settings
# =============================================================================

# Master/Slave communication port
# Port for direct SAE-to-SAE communication (future use)
SAE_MASTER_SLAVE_PORT=8080

# Notification timeout in seconds
# Timeout for master/slave notifications
SAE_NOTIFICATION_TIMEOUT=10

# =============================================================================
# Synchronization Settings
# =============================================================================

# UDP port for synchronization messages
# Port for SAE-to-SAE UDP synchronization messages
SAE_UDP_PORT=5000

# Synchronization timeout in seconds
# Timeout for synchronization operations
SAE_SYNC_TIMEOUT=30

# Rotation advance time in seconds
# Advance time for key rotation (default: 5 minutes)
SAE_ROTATION_ADVANCE_TIME=300

# Device persona
# Device persona to use for key management
# Values: default, aos8, example, macsec, or any custom persona name
# 'default' persona only handles message exchange without device operations
SAE_DEVICE_PERSONA=default

# Maximum UDP message size
# Maximum size of UDP synchronization messages
SAE_MAX_MESSAGE_SIZE=8192

# Signature algorithm
# Algorithm for signing synchronization messages
SAE_SIGNATURE_ALGORITHM=RSA-SHA256

# Known SAEs file
# File containing known SAE peer information
SAE_KNOWN_SAES_FILE=./data/known_saes.json

# =============================================================================
# Storage Configuration
# =============================================================================

# Storage backend type
# Choose between 'sqlite' (database) or 'json' (file-based)
# JSON is simpler for development, SQLite is better for production
SAE_STORAGE_BACKEND=sqlite

# Storage path
# For SQLite: path to database file (e.g., ./data/sae_client.db)
# For JSON: path to JSON file (e.g., ./data/keys.json)
SAE_STORAGE_PATH=./data/sae_client.db

# =============================================================================
# Usage Examples
# =============================================================================

# Example 1: Master SAE configuration
# SAE_SAE_ID=SAE_MASTER_001
# SAE_SAE_MODE=master
# SAE_SAE_ROLES=["master"]
# SAE_KME_HOST=192.168.1.100
# SAE_KME_PORT=8443

# Example 2: Slave SAE configuration
# SAE_SAE_ID=SAE_SLAVE_001
# SAE_SAE_MODE=slave
# SAE_SAE_ROLES=["slave"]
# SAE_KME_HOST=192.168.1.100
# SAE_KME_PORT=8443

# Example 3: Multi-role SAE configuration
# SAE_SAE_ID=SAE_HUB_001
# SAE_SAE_MODE=master
# SAE_SAE_ROLES=["master", "slave"]
# SAE_KME_HOST=192.168.1.100
# SAE_KME_PORT=8443

# Example 4: Development configuration with debug
# SAE_DEBUG_MODE=true
# SAE_LOG_LEVEL=DEBUG
# SAE_VERIFY_SSL=false
# SAE_KME_HOST=localhost
# SAE_KME_PORT=8443

# =============================================================================
# Notes
# =============================================================================

# 1. Certificate Configuration:
#    - Ensure all certificate paths point to valid files
#    - Certificates must be in PEM format
#    - SAE certificate Common Name should match SAE_SAE_ID
#    - All certificates must be signed by the same CA

# 2. Network Configuration:
#    - KME_HOST should be reachable from this SAE
#    - KME_PORT should match the KME server configuration
#    - Use HTTPS for production environments

# 3. Security Considerations:
#    - Keep private keys secure and restrict file permissions
#    - Use strong passwords for private keys
#    - Regularly rotate certificates
#    - Enable SSL verification in production

# 4. Debug Mode:
#    - Only enable in development/testing environments
#    - Debug mode logs sensitive information (key material)
#    - Disable in production for security

# 5. Multi-Role Support:
#    - SAE_SAE_ROLES allows a single SAE to act as both master and slave
#    - Useful for hub-and-spoke or peer-to-peer topologies
#    - SAE_SAE_MODE is maintained for backward compatibility
